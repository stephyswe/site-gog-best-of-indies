import type { Metadata } from "next";
import { headers } from "next/headers";

import { GameOverhead, GameSvg, RootSvg } from "@/app/layout-svg";
import { Navbar } from "@/ui/navbar/Navbar";

import "./custom-section-flashdeal.css";
import "./custom-section.css";
import "./footer.css";
import "./globals.css";
import "./gog-statics.css";
import "./gog.css";
import "./menu.css";
import "./morecss.css";
import "./now-on-sale.css";
import "./slider.css";

// game page
import './game-prince-of-persia.css';
import './game-product.css';

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  params: any;
  children: React.ReactNode;
}) {
  // handle body class based on route
  const headersList = headers();
  const activePath = headersList.get("x-invoke-path");
  console.log(activePath);

  function bodyClass() {
    if (activePath === "/game") {
      return "productcard _prices-in-sek _price-currency-symbol-before";
    }
  }

  function innerBodyRender(children: any) {
    if (activePath === "/game") {
      return (
        <div className="layout ng-scope" card-product="1207658747">
          <GameSvg />
          <Navbar />
          <GameOverhead />
          {children}
        </div>
      );
    } else {
      return (
        <>
          <RootSvg />
          <Navbar />
          {children}
        </>
      );
    }
  }

  return (
    <html
      className="
        native-mode
        prices-in-sek
        lang--en-us
        curr-symbol-before
        country-se
        lato-20
        has-new-menu"
      lang="en"
      data-theme="light"
    >
      <body
        ng-init="userModel = {isUser: false, isAnonymous: false, bodyClass:false}; bodyModel = {bodyClass: ''}"
        ng-class="{'is-user':userModel.isUser, 'is-anonymous':userModel.isAnonymous}"
        className={bodyClass()}
        gog-string-format=""
      >
        {/* <!-- force end any comment tags before the partial --> */}
        {innerBodyRender(children)}
      </body>
    </html>
  );
}
